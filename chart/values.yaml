# Default values for joy-generator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

env:
  PORT: :8080
  GRACE_PERIOD: 10s
  PLUGIN_TOKEN: ""
  CATALOG_URL: ""
  CATALOG_DIR: /tmp/catalog
  CATALOG_REVISION: ""
  GH_USER: ""
  GH_TOKEN: ""
  GH_APP_ID: ""
  GH_APP_INSTALLATION_ID: ""

# Configuration settings for the joy-generator instance
applicationConfig:
  # The shared token that ArgoCD will use to call the joy-generator plugin API
  # This should be some long and secure random string
  pluginToken: ""
  # The HTTPS Git URL of your joy catalog
  repoUrl: ""

  # joy-generator supports authenticating with GitHub using either a personal access token or a GitHub App
  # Provide either the githubUser or githubApp section, but not both

#  githubUser:
#    # The GitHub username to use for the joy-generator instance
#    username: ""
#    # The GitHub personal access token to use for the joy-generator instance
#    token: ""

#  githubApp:
#    # The GitHub application ID
#    appId: ""
#    # The GitHub application installation ID
#    installationId: ""
#    # The GitHub application private key (PEM format)
#    privateKey: ""

# The secret type to use for applicationConfig values.
# Can be either 'secret' or 'sealedSecret'.
secretType: "secret"
# Additional annotations for sealed secrets
sealedSecretAnnotations: {}

replicaCount: 1

image:
  repository: ghcr.io/nestoca/joy-generator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
